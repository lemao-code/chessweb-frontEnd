{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\chesswebfrontend\\\\chessweb-frontEnd\\\\components\\\\AddMatch.js\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { ContainerAddMatch, InputAddMatch, FontNameAndRanking, ButtonSubmit } from '../style/style';\n\nfunction AddMatch() {\n  const {\n    0: winner,\n    1: setWinner\n  } = useState('');\n  const {\n    0: loser,\n    1: setLoser\n  } = useState('');\n  const {\n    0: empate,\n    1: setEmpate\n  } = useState(0);\n\n  async function handleAddMatch(winner, loser, empate) {\n    console.log(winner);\n    console.log(loser);\n    const response = await axios.post('http://localhost:3333', {\n      \"p1\": `${winner}`,\n      \"p2\": `${loser}`,\n      \"empate\": {\n        \"true\": empate\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContainerAddMatch, {\n    children: [/*#__PURE__*/_jsxDEV(FontNameAndRanking, {\n      children: \"Add Partida\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => setEmpate(1),\n        style: {\n          width: 20,\n          height: 20\n        },\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: 20,\n            fontWeight: \"bold\",\n            color: \"white\",\n            marginLeft: 10\n          },\n          children: \"Empate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputAddMatch, {\n      type: \"text\",\n      value: winner,\n      onChange: e => setWinner(e.target.value),\n      placeholder: \"Vencedor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputAddMatch, {\n      type: \"text\",\n      value: loser,\n      onChange: e => setLoser(e.target.value),\n      placeholder: \"Derrotado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonSubmit, {\n      onClick: () => handleAddMatch(winner, loser, empate),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 12,\n          color: \"white\",\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        },\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 79\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\nexport default AddMatch;","map":{"version":3,"sources":["D:/chesswebfrontend/chessweb-frontEnd/components/AddMatch.js"],"names":["useState","axios","ContainerAddMatch","InputAddMatch","FontNameAndRanking","ButtonSubmit","AddMatch","winner","setWinner","loser","setLoser","empate","setEmpate","handleAddMatch","console","log","response","post","display","flexDirection","alignItems","width","height","fontSize","fontWeight","color","marginLeft","e","target","value","textAlign"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport {ContainerAddMatch, InputAddMatch, FontNameAndRanking, ButtonSubmit} from '../style/style'\r\n\r\nfunction AddMatch () {\r\n    const [winner, setWinner] = useState('')\r\n    const [loser, setLoser] = useState('')\r\n    const [empate, setEmpate] = useState(0)\r\n\r\n    async function handleAddMatch (winner,loser,empate) {\r\n        console.log(winner)\r\n        console.log(loser)\r\n        const response = await axios.post('http://localhost:3333', {\r\n            \"p1\": `${winner}`,\r\n            \"p2\": `${loser}`,\r\n            \"empate\": {\r\n                \"true\": empate\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <ContainerAddMatch>\r\n            <FontNameAndRanking>Add Partida</FontNameAndRanking>\r\n            <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"center\"}}>\r\n                <input onClick={() => setEmpate(1)}style={{width: 20, height: 20}} type=\"checkbox\" /> \r\n                    <label><p style={{fontSize: 20, fontWeight: \"bold\", color: \"white\", marginLeft: 10}}>Empate</p></label>\r\n            </div>\r\n            <InputAddMatch type=\"text\" value={winner} onChange={e => setWinner(e.target.value)} placeholder=\"Vencedor\" />\r\n            <InputAddMatch type=\"text\" value={loser} onChange={e => setLoser(e.target.value)} placeholder=\"Derrotado\" />\r\n            <ButtonSubmit onClick={() => handleAddMatch(winner,loser,empate)}><p style={{fontSize: 12, color: \"white\", fontWeight: \"bold\", textAlign: \"center\"}}>Enviar</p></ButtonSubmit>\r\n        </ContainerAddMatch>\r\n    )\r\n}\r\n\r\nexport default AddMatch"]},"metadata":{},"sourceType":"module"}